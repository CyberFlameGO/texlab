name: Deployment
on:
  release:
    types: [published]
env:
  CARGO_INCREMENTAL: 0
  CI: 1
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10
jobs:
  github:
    name: GitHub (${{ matrix.os }}, ${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            target: null
            archive_file: texlab-x86_64-linux.tar.gz
            archive_cmd: tar -czvf {0} -C target/release texlab
            archive_type: application/gzip
          - os: windows-latest
            target: null
            archive_file: texlab-x86_64-windows.zip
            archive_cmd: Compress-Archive target/release/texlab.exe {0}
            archive_type: application/zip
          - os: macos-latest
            target: null
            archive_file: texlab-x86_64-macos.tar.gz
            archive_cmd: brew install gnu-tar; gtar -czvf {0} -C target/release texlab
            archive_type: application/gzip
          - os: macos-11
            target: aarch64-apple-darwin
            archive_file: texlab-aarch64-macos.tar.gz
            archive_cmd: brew install gnu-tar; gtar -czvf {0} -C target/aarch64-apple-darwin/release texlab
            archive_type: application/gzip
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Compile
        run: cargo build --release --locked
        if: matrix.target == null
      - name: Compile (Cross)
        run: cargo build --release --locked --target ${{ matrix.target }}
        if: matrix.target != null
      - name: Compress release binary
        run: ${{ format(matrix.archive_cmd, matrix.archive_file) }}
      - name: Upload release binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.archive_file }}
          asset_name: ${{ matrix.archive_file }}
          asset_content_type: ${{ matrix.archive_type }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  crates:
    name: crates.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  ctan:
    name: CTAN
    needs: [github, crates]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - run: git archive --prefix=texlab/ -o texlab.zip HEAD
      - id: get-version
        run: |
          RELEASE_TAG=${{ github.event.release.tag_name }}
          echo "::set-output name=version::${RELEASE_TAG:1}"
      - uses: paolobrasolin/ctan-submit-action@v1
        with:
          action: upload
          file_path: texlab.zip
          fields: |
            pkg: texlab
            version: ${{ steps.get-version.outputs.version }}
            uploader: Eric FÃ¶rster
            email: eric.foerster@outlook.com
            update: 'true'
